{"version":3,"sources":["apolloClient.js","queries.js","Components/Movie.js","Home.js","Movie.js","Routes/Detail/Detail.js","Routes/Drama/Drama.js","Styles/GlobalStyles.js","Styles/Theme.js","Components/Header/Header.js","App.js","index.js"],"names":["client","ApolloClient","uri","NOW_PLAY_MOVIE","gql","DRAMA_PAGE","MOVIE_DETAILS","Card","styled","div","MovieImage","props","background","IntroBox","Movie","index","id","title","poster","overview","rating","key","to","PropType","number","isRequired","string","Wrapper","Title","h2","MoviesContainer","Home","useQuery","data","loading","console","log","nowPlayMovies","map","movie","poster_path","vote_average","span","Container","Image","withComponent","h1","Paragraph","bold","MovieContainer","Contents","Detail","movieId","match","params","query","variables","parseInt","error","Fragment","src","suggestions","Drama","createGlobalStyle","reset","theme","bgColor","blackColor","blueColor","darkGreenColor","maxWidth","darkGreyColor","lightGreyColor","redColor","darkBlueColor","boxBorder","borderRadius","whiteBox","header","CategoryBox","Category","Header","App","Theme","GlobalStyles","exact","path","component","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c0774fc.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n    uri:\"https://pacific-beyond-15227.herokuapp.com/\"\n\n})\n\nexport default client","import gql from \"graphql-tag\";\n\nexport const NOW_PLAY_MOVIE = gql`\n    query{\n        nowPlayMovies(page:1){\n        title\n        id\n        genre_ids\n        overview\n        poster_path\n        vote_average\n        }\n    }\n\n`\nexport const DRAMA_PAGE = gql`\n    query{\n        movies(page:1){\n        title\n        id\n        genre_ids\n        overview\n        poster_path\n        vote_average\n        }\n    }\n`\nexport const MOVIE_DETAILS = gql`\n    query getMovieDetail($movieId:Int!){\n        movie(id:$movieId){\n            title\n            id\n            genre_ids\n            overview\n            poster_path\n            vote_average\n        }\n        suggestions(id:$movieId){\n            title\n            id\n            genre_ids\n            overview\n            poster_path\n            vote_average\n        }\n    }\n`","import React from \"react\";\nimport PropType from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: row;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-size: cover;\n  background-position: center center;\n  height: 280px;\n  width: 470px;\n  position: relative;\n  margin:5px;\n`;\n\nconst MovieImage = styled.div`\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  flex:1;\n`\n\nconst IntroBox = styled.div`\n  flex:2;\n`;\n\nconst Movie = ({index,id,title,overview,poster,rating}) =>(\n  <Link key={index} to={`/details/${id}`}>\n    <Card>\n      <MovieImage background={`https://image.tmdb.org/t/p/w500${poster}`}/>\n      <IntroBox>\n        <div>{title}{rating}</div>\n      </IntroBox>\n    </Card>\n  </Link>\n)\nMovie.PropType = {\n  id: PropType.number.isRequired,\n  title: PropType.string.isRequired,\n  overview: PropType.string.isRequired,\n  poster: PropType.string.isRequired\n}\n\nexport default Movie;","import React from \"react\";\nimport { useQuery } from 'react-apollo-hooks';\nimport { NOW_PLAY_MOVIE } from \"./queries\";\nimport styled from \"styled-components\";\nimport Movie from \"./Components/Movie\";\nimport IconButton from 'material-ui/IconButton';\n\nconst Wrapper = styled.div`\n    margin-top: 30px;\n  display: block;\n  min-height: 80vh;\n`;\nconst Title = styled.h2`\n    font-size: 24px;\n    margin-bottom: 15px;\n`;\n\nconst MoviesContainer = styled.div`\n    display:flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;\n\n\nconst Home = () => {\n\n    const {data,loading}= useQuery(NOW_PLAY_MOVIE);\n    \n    if(loading){\n        return <div>loading</div>\n    }else{\n        console.log(data);\n        return (\n            <Wrapper>\n                <Title>\n                    인기 영화\n                </Title>\n                <MoviesContainer>\n                    {data.nowPlayMovies.map((movie, index)=>(\n                        <Movie\n                        key={index}\n                        index\n                        id={movie.id}\n                        poster={movie.poster_path}\n                        overview={movie.overview}\n                        title={movie.title}\n                        rating={movie.vote_average}\n                        />\n                    ))}\n                </MoviesContainer>\n                \n\n            </Wrapper>\n        )\n\n    }\n}\n\n// const Home = () =>\n    \n//     <Container> \n//         <Query query={HOME_PAGE}>{({ loading, data, error }) => {\n//             if (loading) return <span>loading</span>;\n//             if (error) return <span>something happened</span>;\n//             console.log(data);\n//             return data.movies.map((movie, index) => (\n//                 <Movie key={index}\n//                     index\n//                     id={movie.id}\n//                     poster={movie.poster_path}\n//                     overview={movie.overview}\n//                     title={movie.title}\n//                     rating={movie.vote_average}\n//                 >\n//                 </Movie>\n//             ));\n//         }}\n//         </Query>\n//     </Container>\nexport default Home;\n","import React from \"react\";\nimport PropType from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 15px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 40px;\n  position: relative;\n`;\nconst Title = styled.span`\n  background-color: white;\n  width: auto;\n  padding: 10px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  position: absolute;\n  bottom: 25px;\n  left: 0;\n  right: 0;\n  margin: auto;\n  font-weight:600;\n`;\n\nconst Movie = ({index,id,title,overview,poster,rating})=>(\n    <Link to={`/details/${id}`} >\n        <Card background={`https://image.tmdb.org/t/p/w500${poster}`}>\n            <Title>\n            {title}/⭐{rating}\n            </Title>\n\n        </Card>\n\n    </Link>\n)\nMovie.PropType = {\n    id: PropType.number.isRequired,\n    title: PropType.string.isRequired,\n    overview: PropType.string.isRequired,\n    poster: PropType.string.isRequired\n}\n\nexport default Movie;","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { MOVIE_DETAILS } from \"../../queries\";\nimport styled from \"styled-components\";\nimport Movie from \"../../Movie\";\n\n\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns: 1fr 4fr;\n    margin-bottom: 40px;\n`\nconst Card = styled.div`\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n    background-color: white;\n    border-radius: 7px;\n    width:100%;\n`\nconst Image = Card.withComponent(\"img\");\n\nconst Title = styled.h1`\n    font-size: 24px;\n    margin-bottom: 10px;    \n`\nconst Paragraph = styled.span`\n  margin-bottom: 10px;\n  display: block;\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\n  font-size: 20px;\n`;\nconst MovieContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n  margin-top: 50px;\n`;\nconst Contents = styled.span`\n    padding:15px;\n`\n\nconst Detail = ({\n    match: {\n        params: { movieId }\n    }\n}) => <Query query={MOVIE_DETAILS} variables={{ movieId: parseInt(movieId) }}>\n        {({ loading, error, data }) => {\n\n            if (loading) return \"loading\";\n            if (error) return \"error\";\n            console.log(data);\n            return (\n                <React.Fragment>\n                    <Container>\n                        <Image src={`https://image.tmdb.org/t/p/w500${data.movie.poster_path}`}>\n\n                        </Image>\n                        <Contents>\n                            <Title>\n                                {data.movie.title}\n                            </Title>\n                            <Paragraph bold>\n                                {data.movie.vote_average}⭐️\n                            </Paragraph>\n                            <Paragraph>\n                                {data.movie.overview}\n                            </Paragraph>\n\n                        </Contents>\n                    </Container>\n                    <Title>추천 영화</Title>\n                    <MovieContainer>\n                        {console.log(data)}\n                        {data.suggestions.map(movie=>(\n                            <Movie\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.title}\n                                poster={movie.poster_path}\n                                rating={movie.vote_average}\n                            >\n\n                            </Movie>\n                        ))}\n                    </MovieContainer>\n                </React.Fragment>\n            )\n        }}\n\n\n\n    </Query>\n\nexport default Detail;\n","import React from \"react\";\nimport {Query} from \"react-apollo\";\nimport styled from \"styled-components\";\nimport { DRAMA_PAGE } from \"../../queries\";\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns: repeat(3, 0.7fr);\n    flex-wrap: wrap;\n    justify-items: center;\n`\n\nconst Drama= () =>\n    <Container>\n        <Query query={DRAMA_PAGE}>{({loading,data,error}) => {\n            if(loading) return <span>loading</span>;\n            if(error) return <span>something happened</span>\n            console.log(data);\n            return \"1\"\n        }}\n\n\n        </Query>\n    </Container>\n\nexport default Drama;","import {createGlobalStyle} from \"styled-components\";\nimport reset from \"styled-reset\";\n\nexport default createGlobalStyle`\n    ${reset};\n    @import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600,700');\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        background-color:${props=>props.theme.bgColor};\n        color:${props=>props.theme.blackColor};\n        font-size:14px;\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        padding-top: 120px;\n    }\n    a {\n        color:${props => props.theme.blueColor};\n        text-decoration:none;\n    }\n`;","const BOX_BORDER = \"1px solid #e6e6e6\";\nconst BORDER_RADIUS = \"4px\";\n\nexport default {\n    darkGreenColor: \"#0D1C23\",\n    maxWidth: \"1000px\",\n    bgColor: \"#FAFAFA\",\n    blackColor: \"#262626\",\n    darkGreyColor: \"#999\",\n    lightGreyColor: \"#c7c7c7\",\n    redColor: \"#ED4956\",\n    blueColor: \"#3897f0\",\n    darkBlueColor: \"#003569\",\n    boxBorder: \"1px solid #e6e6e6\",\n    borderRadius: \"4px\",\n    whiteBox: `border:${BOX_BORDER};\n             border-radius:${BORDER_RADIUS};\n             background-color:white;\n            `\n};","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n// import { Logo } from \"../Icons\";\n\nconst Container = styled.header`\n    z-index:10;\n    display:flex;\n    align-items: center;\n    position: fixed;\n    left:0;\n    top:0;\n    background-color: ${props => props.theme.darkGreenColor};\n    padding: 10px 95px;\n    height:110px;\n    width:100%;\n`;\n\nconst CategoryBox = styled.div`\n    display:inherit;\n    align-items: center;\n\n`;\n\nconst Category = styled.div`\n    font-size:16px;\n    padding: 10px 0 ;\n    font-weight: 600;\n    color: #FFFFFF;\n    margin-right: 30px;\n`\n\nconst Header = () =>\n    <Container>\n        <CategoryBox>\n            <Link to={`/`}>\n                <Category>\n                    영화\n            </Category>\n            </Link>\n            <Link to={`/drama`}>\n                <Category>\n                    TV프로그램\n            </Category>\n            </Link>\n            <Link to={`/drama`}>\n                <Category>\n                    인물\n            </Category>\n            </Link>\n        </CategoryBox>\n    </Container>\n\n\nexport default Header;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n// import { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\";\nimport client from \"./apolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Routes/Detail/Detail\";\nimport Drama from \"./Routes/Drama/Drama\";\nimport GlobalStyles from \"./Styles/GlobalStyles\";\nimport Theme from \"./Styles/Theme\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport Header from './Components/Header/Header';\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin: 0 auto;\n  max-width: 1000px;\n  width: 100%;\n  max-width: ${props => props.theme.maxWidth};\n`;\n\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloHooksProvider client={client}>\n        <ThemeProvider theme={Theme}>\n          <Router>\n              <GlobalStyles />\n              <Header></Header>\n              <Wrapper>\n                <Route exact={true} path={\"/\"} component={Home} />\n                <Route path={\"/details/:movieId\"} component={Detail} />\n                <Route path={\"/drama\"} component={Drama} />\n              </Wrapper>\n          </Router>\n        </ThemeProvider>\n\n      </ApolloHooksProvider>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\n\n\nReactDOM.render(<MuiThemeProvider><App/></MuiThemeProvider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}