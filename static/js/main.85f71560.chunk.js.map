{"version":3,"sources":["apolloClient.js","queries.js","Components/Movie.js","Home.js","Movie.js","Routes/Detail/Detail.js","Routes/Drama/Drama.js","Styles/GlobalStyles.js","Styles/Theme.js","Components/Header/Header.js","App.js","index.js"],"names":["client","ApolloClient","uri","NOW_PLAY_MOVIE","gql","DRAMA_PAGE","MOVIE_DETAILS","Card","styled","div","MovieImage","props","background","IntroBox","IntroHeader","Title","span","Date","Overview","p","DetailBox","Link","progressStyle","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","Movie","index","id","title","overview","poster","vote_average","rating","release_date","key","style","width","styles","value","maxValue","text","marginLeft","to","PropType","number","isRequired","string","Wrapper","h2","MoviesContainer","Home","useQuery","data","loading","console","log","nowPlayMovies","map","movie","poster_path","Container","Image","withComponent","h1","Paragraph","bold","MovieContainer","Contents","Detail","movieId","match","params","variables","parseInt","error","Fragment","src","suggestions","Drama","query","createGlobalStyle","reset","theme","bgColor","blackColor","blueColor","darkGreenColor","maxWidth","darkGreyColor","lightGreyColor","redColor","darkBlueColor","boxBorder","borderRadius","whiteBox","header","CategoryBox","Category","Header","App","Theme","GlobalStyles","exact","path","component","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85f71560.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n    uri:\"https://pacific-beyond-15227.herokuapp.com/\"\n\n})\n\nexport default client","import gql from \"graphql-tag\";\n\nexport const NOW_PLAY_MOVIE = gql`\n    query{\n        nowPlayMovies(page:1){\n        title\n        id\n        genre_ids\n        overview\n        poster_path\n        vote_average\n        release_date\n        }\n    }\n\n`\nexport const DRAMA_PAGE = gql`\n    query{\n        movies(page:1){\n        title\n        id\n        genre_ids\n        overview\n        poster_path\n        vote_average\n        }\n    }\n`\nexport const MOVIE_DETAILS = gql`\n    query getMovieDetail($movieId:Int!){\n        movie(id:$movieId){\n            title\n            id\n            genre_ids\n            overview\n            poster_path\n            vote_average\n        }\n        suggestions(id:$movieId){\n            title\n            id\n            genre_ids\n            overview\n            poster_path\n            vote_average\n        }\n    }\n`","import React from \"react\";\nimport PropType from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: row;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-size: cover;\n  background-position: center center;\n  height: 280px;\n  width: 470px;\n  position: relative;\n  margin:5px;\n`;\n\nconst MovieImage = styled.div`\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  width: 185px;\n    height: 280px;\n`\n\nconst IntroBox = styled.div`\n  display:flex;\n  position:relative;\n  flex-direction: column;\n  padding: 10px 16px 16px;\n  width: 298px;\n`;\nconst IntroHeader = styled.div`\n  display:inherit;\n  flex-direction: row;\n`;\nconst Title = styled.span`\n  font-size:1.1em;\n  line-height:1.1em;\n  color: #000000;\n  margin-bottom:2px;\n`;\nconst Date = styled.span`\n  display:block;\n  color:#757575;\n  font-size:1.1em;\n`;\nconst Overview = styled.p`\n  white-space: normal;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-top:30px;\n  color:#4d4d4d;\n  font-size: 1.1em;\n  line-height:1.2em;\n  height: 7em;\n`\nconst DetailBox = styled(Link)`\n    width:100%;\n    border-top: 1px solid #e3e3e3;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    padding: 16px;\n`;\n\n\nconst progressStyle = buildStyles({\n\n  // Rotation of path and trail, in number of turns (0-1)\n  rotation: 0.25,\n\n  // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n  strokeLinecap: 'butt',\n\n  // Text size\n  textSize: '30px',\n\n  // How long animation takes to go from one percentage to another, in seconds\n  pathTransitionDuration: 0.5,\n\n  // Can specify path transition in more detail, or remove it entirely\n  // pathTransition: 'none',\n\n  // Colors\n  pathColor: '#D3D454',\n  textColor: '#FFFFFF',\n  trailColor: '#413D17',\n  backgroundColor: '#0D1C21',\n})\n\nconst Movie = ({ index, id, title, overview, poster, rating, vote_average, release_date }) => (\n\n    <Card key={index}>\n      <MovieImage background={`https://image.tmdb.org/t/p/w500${poster}`} />\n      <IntroBox>\n        <IntroHeader>\n          <div style={{ width: '38px' }}>\n            <CircularProgressbar styles={progressStyle} background={true} value={vote_average} maxValue={10} text={`${vote_average * 10}%`} />\n          </div>\n          <div style={{ width: '100%', marginLeft: '10px' }}>\n            <Title>\n              {title}\n            </Title>\n            <Date>\n              {release_date}\n            </Date>\n          </div>\n        </IntroHeader>\n        <Overview>\n          {overview}\n        </Overview>\n        <DetailBox to={`/details/${id}`}>\n          더보기\n        </DetailBox>\n      </IntroBox>\n    </Card>\n)\nMovie.PropType = {\n  id: PropType.number.isRequired,\n  title: PropType.string.isRequired,\n  overview: PropType.string.isRequired,\n  poster: PropType.string.isRequired\n}\n\nexport default Movie;","import React from \"react\";\nimport { useQuery } from 'react-apollo-hooks';\nimport { NOW_PLAY_MOVIE } from \"./queries\";\nimport styled from \"styled-components\";\nimport Movie from \"./Components/Movie\";\nimport IconButton from 'material-ui/IconButton';\n\nconst Wrapper = styled.div`\n    margin-top: 30px;\n  display: block;\n  min-height: 80vh;\n`;\nconst Title = styled.h2`\n    font-size: 24px;\n    margin-bottom: 15px;\n`;\n\nconst MoviesContainer = styled.div`\n    display:flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;\n\n\nconst Home = () => {\n\n    const {data,loading}= useQuery(NOW_PLAY_MOVIE);\n    \n    if(loading){\n        return <div>loading</div>\n    }else{\n        console.log(data);\n        return (\n            <Wrapper>\n                <Title>\n                    인기 영화\n                </Title>\n                <MoviesContainer>\n                    {data.nowPlayMovies.map((movie, index)=>(\n                        <Movie\n                        key={index}\n                        index\n                        id={movie.id}\n                        poster={movie.poster_path}\n                        overview={movie.overview}\n                        title={movie.title}\n                        rating={movie.vote_average}\n                        vote_average={movie.vote_average}\n                        release_date={movie.release_date}\n                        />\n                    ))}\n                </MoviesContainer>\n                \n\n            </Wrapper>\n        )\n\n    }\n}\n\n// const Home = () =>\n    \n//     <Container> \n//         <Query query={HOME_PAGE}>{({ loading, data, error }) => {\n//             if (loading) return <span>loading</span>;\n//             if (error) return <span>something happened</span>;\n//             console.log(data);\n//             return data.movies.map((movie, index) => (\n//                 <Movie key={index}\n//                     index\n//                     id={movie.id}\n//                     poster={movie.poster_path}\n//                     overview={movie.overview}\n//                     title={movie.title}\n//                     rating={movie.vote_average}\n//                 >\n//                 </Movie>\n//             ));\n//         }}\n//         </Query>\n//     </Container>\nexport default Home;\n","import React from \"react\";\nimport PropType from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 15px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 40px;\n  position: relative;\n`;\nconst Title = styled.span`\n  background-color: white;\n  width: auto;\n  padding: 10px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  position: absolute;\n  bottom: 25px;\n  left: 0;\n  right: 0;\n  margin: auto;\n  font-weight:600;\n`;\n\nconst Movie = ({index,id,title,overview,poster,rating,vote_average,release_date})=>(\n    <Link to={`/details/${id}`} >\n        <Card background={`https://image.tmdb.org/t/p/w500${poster}`}>\n            <Title>\n            {title}/⭐{rating}\n            </Title>\n\n        </Card>\n\n    </Link>\n)\nMovie.PropType = {\n    id: PropType.number.isRequired,\n    title: PropType.string.isRequired,\n    overview: PropType.string.isRequired,\n    poster: PropType.string.isRequired\n}\n\nexport default Movie;","import React from \"react\";\nimport { useQuery } from 'react-apollo-hooks';\nimport { MOVIE_DETAILS } from \"../../queries\";\nimport styled from \"styled-components\";\nimport Movie from \"../../Movie\";\n\n\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns: 1fr 4fr;\n    margin-bottom: 40px;\n`\nconst Card = styled.div`\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n    background-color: white;\n    border-radius: 7px;\n    width:100%;\n`\nconst Image = Card.withComponent(\"img\");\n\nconst Title = styled.h1`\n    font-size: 24px;\n    margin-bottom: 10px;    \n`\nconst Paragraph = styled.span`\n  margin-bottom: 10px;\n  display: block;\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\n  font-size: 20px;\n`;\nconst MovieContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n  margin-top: 50px;\n`;\nconst Contents = styled.span`\n    padding:15px;\n`\nconst Detail = ({\n    match: {\n        params: { movieId }\n    }\n}) => {\n    const { data, loading,error } = useQuery(MOVIE_DETAILS, {\n        variables: {\n            movieId: parseInt(movieId)\n        }\n    })\n\n    if (loading) return \"loading\";\n    if (error) return \"error\";\n    return (\n        <React.Fragment>\n            <Container>\n                <Image src={`https://image.tmdb.org/t/p/w500${data.movie.poster_path}`}>\n\n                </Image>\n                <Contents>\n                    <Title>\n                        {data.movie.title}\n                    </Title>\n                    <Paragraph bold>\n                        {data.movie.vote_average}⭐️\n                            </Paragraph>\n                    <Paragraph>\n                        {data.movie.overview}\n                    </Paragraph>\n\n                </Contents>\n            </Container>\n            <Title>추천 영화</Title>\n            <MovieContainer>\n                {console.log(data)}\n                {data.suggestions.map(movie => (\n                    <Movie\n                        key={movie.id}\n                        id={movie.id}\n                        title={movie.title}\n                        poster={movie.poster_path}\n                        rating={movie.vote_average}\n                    >\n\n                    </Movie>\n                ))}\n            </MovieContainer>\n        </React.Fragment>\n    )\n}\nexport default Detail;\n","import React from \"react\";\nimport {Query} from \"react-apollo\";\nimport styled from \"styled-components\";\nimport { DRAMA_PAGE } from \"../../queries\";\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns: repeat(3, 0.7fr);\n    flex-wrap: wrap;\n    justify-items: center;\n`\n\nconst Drama= () =>\n    <Container>\n        <Query query={DRAMA_PAGE}>{({loading,data,error}) => {\n            if(loading) return <span>loading</span>;\n            if(error) return <span>something happened</span>\n            console.log(data);\n            return \"1\"\n        }}\n\n\n        </Query>\n    </Container>\n\nexport default Drama;","import {createGlobalStyle} from \"styled-components\";\nimport reset from \"styled-reset\";\n\nexport default createGlobalStyle`\n    ${reset};\n    @import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600,700');\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        background-color:${props=>props.theme.bgColor};\n        color:${props=>props.theme.blackColor};\n        font-size:14px;\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        padding-top: 120px;\n    }\n    a {\n        color:${props => props.theme.blueColor};\n        text-decoration:none;\n    }\n`;","const BOX_BORDER = \"1px solid #e6e6e6\";\nconst BORDER_RADIUS = \"4px\";\n\nexport default {\n    darkGreenColor: \"#0D1C23\",\n    maxWidth: \"1000px\",\n    bgColor: \"#FAFAFA\",\n    blackColor: \"#262626\",\n    darkGreyColor: \"#999\",\n    lightGreyColor: \"#c7c7c7\",\n    redColor: \"#ED4956\",\n    blueColor: \"#3897f0\",\n    darkBlueColor: \"#003569\",\n    boxBorder: \"1px solid #e6e6e6\",\n    borderRadius: \"4px\",\n    whiteBox: `border:${BOX_BORDER};\n             border-radius:${BORDER_RADIUS};\n             background-color:white;\n            `\n};","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n// import { Logo } from \"../Icons\";\n\nconst Container = styled.header`\n    z-index:10;\n    display:flex;\n    align-items: center;\n    position: fixed;\n    left:0;\n    top:0;\n    background-color: ${props => props.theme.darkGreenColor};\n    padding: 10px 95px;\n    height:110px;\n    width:100%;\n`;\n\nconst CategoryBox = styled.div`\n    display:inherit;\n    align-items: center;\n\n`;\n\nconst Category = styled.div`\n    font-size:16px;\n    padding: 10px 0 ;\n    font-weight: 600;\n    color: #FFFFFF;\n    margin-right: 30px;\n`\n\nconst Header = () =>\n    <Container>\n        <CategoryBox>\n            <Link to={`/`}>\n                <Category>\n                    영화\n            </Category>\n            </Link>\n            <Link to={`/drama`}>\n                <Category>\n                    TV프로그램\n            </Category>\n            </Link>\n            <Link to={`/drama`}>\n                <Category>\n                    인물\n            </Category>\n            </Link>\n        </CategoryBox>\n    </Container>\n\n\nexport default Header;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n// import { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\";\nimport client from \"./apolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Routes/Detail/Detail\";\nimport Drama from \"./Routes/Drama/Drama\";\nimport GlobalStyles from \"./Styles/GlobalStyles\";\nimport Theme from \"./Styles/Theme\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport Header from './Components/Header/Header';\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin: 0 auto;\n  max-width: 1000px;\n  width: 100%;\n  max-width: ${props => props.theme.maxWidth};\n`;\n\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloHooksProvider client={client}>\n        <ThemeProvider theme={Theme}>\n          <Router>\n              <GlobalStyles />\n              <Header></Header>\n              <Wrapper>\n                <Route exact={true} path={\"/\"} component={Home} />\n                <Route path={\"/details/:movieId\"} component={Detail} />\n                <Route path={\"/drama\"} component={Drama} />\n              </Wrapper>\n          </Router>\n        </ThemeProvider>\n\n      </ApolloHooksProvider>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\n\n\nReactDOM.render(<MuiThemeProvider><App/></MuiThemeProvider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}