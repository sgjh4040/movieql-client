{"version":3,"sources":["apolloClient.js","queries.js","Movie.js","Home.js","Routes/Detail/Detail.js","Routes/Drama/Drama.js","Components/Header/Header.js","App.js","index.js"],"names":["client","ApolloClient","uri","HOME_PAGE","gql","DRAMA_PAGE","MOVIE_DETAILS","Card","styled","div","props","background","Title","span","Movie","index","id","title","poster","overview","rating","to","PropType","number","isRequired","string","Container","Home","query","loading","data","error","console","log","movies","map","movie","key","poster_path","vote_average","Image","withComponent","h1","Paragraph","bold","MovieContainer","Contents","Detail","movieId","match","params","variables","parseInt","Fragment","src","suggestions","Drama","Category","Header","GlobalStyle","createGlobalStyle","reset","App","exact","path","component","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c3ec360.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n    uri:\"https://pacific-beyond-15227.herokuapp.com/\"\n\n})\n\nexport default client","import gql from \"graphql-tag\";\n\nexport const HOME_PAGE = gql`\n    query{\n        movies(page:1){\n        title\n        id\n        genre_ids\n        overview\n        poster_path\n        vote_average\n        }\n    }\n\n`\nexport const DRAMA_PAGE = gql`\n    query{\n        movies(page:1){\n        title\n        id\n        genre_ids\n        overview\n        poster_path\n        vote_average\n        }\n    }\n`\nexport const MOVIE_DETAILS = gql`\n    query getMovieDetail($movieId:Int!){\n        movie(id:$movieId){\n            title\n            id\n            genre_ids\n            overview\n            poster_path\n            vote_average\n        }\n        suggestions(id:$movieId){\n            title\n            id\n            genre_ids\n            overview\n            poster_path\n            vote_average\n        }\n    }\n`","import React from \"react\";\nimport PropType from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 15px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 40px;\n  position: relative;\n`;\nconst Title = styled.span`\n  background-color: white;\n  width: auto;\n  padding: 10px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  position: absolute;\n  bottom: 25px;\n  left: 0;\n  right: 0;\n  margin: auto;\n  font-weight:600;\n`;\n\nconst Movie = ({index,id,title,overview,poster,rating})=>(\n    <Link to={`/details/${id}`} >\n        <Card background={`https://image.tmdb.org/t/p/w500${poster}`}>\n            <Title>\n            {title}/⭐{rating}\n            </Title>\n\n        </Card>\n\n    </Link>\n)\nMovie.PropType = {\n    id: PropType.number.isRequired,\n    title: PropType.string.isRequired,\n    overview: PropType.string.isRequired,\n    poster: PropType.string.isRequired\n}\n\nexport default Movie;","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { HOME_PAGE } from \"./queries\";\nimport styled from \"styled-components\";\nimport Movie from \"./Movie\";\n\n\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns: repeat(3, 0.7fr);\n    flex-wrap: wrap;\n    justify-items: center;\n`\n\nconst Home = () =>\n    \n    <Container> \n        <Query query={HOME_PAGE}>{({ loading, data, error }) => {\n            if (loading) return <span>loading</span>;\n            if (error) return <span>something happened</span>;\n            console.log(data);\n            return data.movies.map((movie, index) => (\n                <Movie key={index}\n                    index\n                    id={movie.id}\n                    poster={movie.poster_path}\n                    overview={movie.overview}\n                    title={movie.title}\n                    rating={movie.vote_average}\n                >\n                </Movie>\n            ));\n        }}\n        </Query>\n    </Container>\nexport default Home;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { MOVIE_DETAILS } from \"../../queries\";\nimport styled from \"styled-components\";\nimport Movie from \"../../Movie\";\n\n\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns: 1fr 4fr;\n    margin-bottom: 40px;\n`\nconst Card = styled.div`\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n    background-color: white;\n    border-radius: 7px;\n    width:100%;\n`\nconst Image = Card.withComponent(\"img\");\n\nconst Title = styled.h1`\n    font-size: 24px;\n    margin-bottom: 10px;    \n`\nconst Paragraph = styled.span`\n  margin-bottom: 10px;\n  display: block;\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\n  font-size: 20px;\n`;\nconst MovieContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n  margin-top: 50px;\n`;\nconst Contents = styled.span`\n    padding:15px;\n`\n\nconst Detail = ({\n    match: {\n        params: { movieId }\n    }\n}) => <Query query={MOVIE_DETAILS} variables={{ movieId: parseInt(movieId) }}>\n        {({ loading, error, data }) => {\n\n            if (loading) return \"loading\";\n            if (error) return \"error\";\n            console.log(data);\n            return (\n                <React.Fragment>\n                    <Container>\n                        <Image src={`https://image.tmdb.org/t/p/w500${data.movie.poster_path}`}>\n\n                        </Image>\n                        <Contents>\n                            <Title>\n                                {data.movie.title}\n                            </Title>\n                            <Paragraph bold>\n                                {data.movie.vote_average}⭐️\n                            </Paragraph>\n                            <Paragraph>\n                                {data.movie.overview}\n                            </Paragraph>\n\n                        </Contents>\n                    </Container>\n                    <Title>추천 영화</Title>\n                    <MovieContainer>\n                        {console.log(data)}\n                        {data.suggestions.map(movie=>(\n                            <Movie\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.title}\n                                poster={movie.poster_path}\n                                rating={movie.vote_average}\n                            >\n\n                            </Movie>\n                        ))}\n                    </MovieContainer>\n                </React.Fragment>\n            )\n        }}\n\n\n\n    </Query>\n\nexport default Detail;\n","import React from \"react\";\nimport {Query} from \"react-apollo\";\nimport styled from \"styled-components\";\nimport { DRAMA_PAGE } from \"../../queries\";\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns: repeat(3, 0.7fr);\n    flex-wrap: wrap;\n    justify-items: center;\n`\n\nconst Drama= () =>\n    <Container>\n        <Query query={DRAMA_PAGE}>{({loading,data,error}) => {\n            if(loading) return <span>loading</span>;\n            if(error) return <span>something happened</span>\n            console.log(data);\n            return \"1\"\n        }}\n\n\n        </Query>\n    </Container>\n\nexport default Drama;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns: repeat(3,1fr);\n    justify-items: center;\n    background-color: #FFFFFF;\n    color: white;\n    \n\n`\nconst Category = styled.div`\n    font-size:15px;\n    padding: 10px 0 ;\n    font-weight: 600;\n`\n\nconst Header = () =>\n    <Container>\n        <Link to={`/`}>\n            <Category>\n                영화\n            </Category>\n        </Link>\n        <Link to={`/drama`}>\n            <Category>\n                드라마\n            </Category>\n        </Link>\n        <Link to={`/drama`}>\n            <Category>\n                추천\n            </Category>\n        </Link>\n    </Container>\n\n\nexport default Header;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"react-apollo\";\nimport client from \"./apolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Routes/Detail/Detail\";\nimport Drama from \"./Routes/Drama/Drama\";\nimport {createGlobalStyle} from \"styled-components\";\nimport reset from \"styled-reset\";\nimport Header from './Components/Header/Header';\n\nconst GlobalStyle= createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Nanum+Gothic&display=swap');\n  ${reset};\n  body{\n    font-family: 'Nanum Gothic', sans-serif;\n    background-color: #ecf0f1;\n  }\n  a{\n      color:inherit;\n      text-decoration: none;\n  }\n  main {\n    width: 80%;\n    margin: 0 auto;\n    padding: 20px;\n  }\n`\n\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <GlobalStyle/>\n          <Header></Header>\n          <main>\n            <Route exact={true} path={\"/\"} component={Home} />\n            <Route path={\"/details/:movieId\"} component={Detail} />\n            <Route path={\"/drama\"} component={Drama} />\n          </main>\n        </Router>\n\n      </ApolloProvider>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}