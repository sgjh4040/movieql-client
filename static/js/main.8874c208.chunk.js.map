{"version":3,"sources":["apolloClient.js","queries.js","Movie.js","Home.js","Detail.js","App.js","index.js"],"names":["client","ApolloClient","uri","HOME_PAGE","gql","MOVIE_DETAILS","Card","styled","div","props","background","Title","span","Movie","index","id","title","poster","overview","rating","to","PropType","number","isRequired","string","Container","Home","query","loading","data","error","console","log","movies","map","movie","key","poster_path","vote_average","Image","withComponent","h1","Paragraph","bold","MovieContainer","Contents","Detail","movieId","match","params","variables","parseInt","Fragment","src","suggestions","GlobalStyle","createGlobalStyle","reset","App","exact","path","component","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8874c208.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\r\n\r\nconst client = new ApolloClient({\r\n    uri:\"https://pacific-beyond-15227.herokuapp.com/\"\r\n\r\n})\r\n\r\nexport default client","import gql from \"graphql-tag\";\r\n\r\nexport const HOME_PAGE = gql`\r\n    query{\r\n        movies(page:1){\r\n        title\r\n        id\r\n        genre_ids\r\n        overview\r\n        poster_path\r\n        vote_average\r\n        }\r\n    }\r\n\r\n`\r\nexport const MOVIE_DETAILS = gql`\r\n    query getMovieDetail($movieId:Int!){\r\n        movie(id:$movieId){\r\n            title\r\n            id\r\n            genre_ids\r\n            overview\r\n            poster_path\r\n            vote_average\r\n        }\r\n        suggestions(id:$movieId){\r\n            title\r\n            id\r\n            genre_ids\r\n            overview\r\n            poster_path\r\n            vote_average\r\n        }\r\n    }\r\n`","import React from \"react\";\r\nimport PropType from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  border-radius: 15px;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n  background-image: ${props => `url(${props.background})`};\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 300px;\r\n  width: 200px;\r\n  margin-bottom: 40px;\r\n  position: relative;\r\n`;\r\nconst Title = styled.span`\r\n  background-color: white;\r\n  width: auto;\r\n  padding: 10px;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n  position: absolute;\r\n  bottom: 25px;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  font-weight:600;\r\n`;\r\n\r\nconst Movie = ({index,id,title,overview,poster,rating})=>(\r\n    <Link to={`/details/${id}`} >\r\n        <Card background={`https://image.tmdb.org/t/p/w500${poster}`}>\r\n            <Title>\r\n            {title}/⭐{rating}\r\n            </Title>\r\n\r\n        </Card>\r\n\r\n    </Link>\r\n)\r\nMovie.PropType = {\r\n    id: PropType.number.isRequired,\r\n    title: PropType.string.isRequired,\r\n    overview: PropType.string.isRequired,\r\n    poster: PropType.string.isRequired\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { HOME_PAGE } from \"./queries\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"./Movie\";\r\n\r\nconst Container = styled.div`\r\n    display:grid;\r\n    grid-template-columns: repeat(3, 0.7fr);\r\n    flex-wrap: wrap;\r\n    justify-items: center;\r\n`\r\n\r\nconst Home = () =>\r\n    <Container>\r\n        <Query query={HOME_PAGE}>{({ loading, data, error }) => {\r\n            if (loading) return <span>loading</span>;\r\n            if (error) return <span>something happened</span>;\r\n            console.log(data);\r\n            return data.movies.map((movie, index) => (\r\n                <Movie key={index}\r\n                    index\r\n                    id={movie.id}\r\n                    poster={movie.poster_path}\r\n                    overview={movie.overview}\r\n                    title={movie.title}\r\n                    rating={movie.vote_average}\r\n                >\r\n                </Movie>\r\n            ));\r\n        }}\r\n        </Query>\r\n    </Container>\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { MOVIE_DETAILS } from \"./queries\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"./Movie\";\r\n\r\nconst Container = styled.div`\r\n    display:grid;\r\n    grid-template-columns: 1fr 4fr;\r\n    margin-bottom: 40px;\r\n`\r\nconst Card = styled.div`\r\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n    background-color: white;\r\n    border-radius: 7px;\r\n    width:100%;\r\n`\r\nconst Image = Card.withComponent(\"img\");\r\n\r\nconst Title = styled.h1`\r\n    font-size: 24px;\r\n    margin-bottom: 10px;    \r\n`\r\nconst Paragraph = styled.span`\r\n  margin-bottom: 10px;\r\n  display: block;\r\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\r\n  font-size: 20px;\r\n`;\r\nconst MovieContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 0.7fr);\r\n  flex-wrap: wrap;\r\n  justify-items: center;\r\n  margin-top: 50px;\r\n`;\r\nconst Contents = styled.span`\r\n    padding:15px;\r\n`\r\n\r\nconst Detail = ({\r\n    match: {\r\n        params: { movieId }\r\n    }\r\n}) => <Query query={MOVIE_DETAILS} variables={{ movieId: parseInt(movieId) }}>\r\n        {({ loading, error, data }) => {\r\n\r\n            if (loading) return \"loading\";\r\n            if (error) return \"error\";\r\n            console.log(data);\r\n            return (\r\n                <React.Fragment>\r\n                    <Container>\r\n                        <Image src={`https://image.tmdb.org/t/p/w500${data.movie.poster_path}`}>\r\n\r\n                        </Image>\r\n                        <Contents>\r\n                            <Title>\r\n                                {data.movie.title}\r\n                            </Title>\r\n                            <Paragraph bold>\r\n                                {data.movie.vote_average}⭐️\r\n                            </Paragraph>\r\n                            <Paragraph>\r\n                                {data.movie.overview}\r\n                            </Paragraph>\r\n\r\n                        </Contents>\r\n                    </Container>\r\n                    <Title>추천 영화</Title>\r\n                    <MovieContainer>\r\n                        {console.log(data)}\r\n                        {data.suggestions.map(movie=>(\r\n                            <Movie\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                poster={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                            >\r\n\r\n                            </Movie>\r\n                        ))}\r\n                    </MovieContainer>\r\n                </React.Fragment>\r\n            )\r\n        }}\r\n\r\n\r\n\r\n    </Query>\r\n\r\nexport default Detail;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"react-apollo\";\nimport client from \"./apolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\nimport {createGlobalStyle} from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyle= createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Nanum+Gothic&display=swap');\n  ${reset};\n  body{\n    font-family: 'Nanum Gothic', sans-serif;\n    background-color: #ecf0f1;\n  }\n  a{\n      color:inherit;\n  }\n  main {\n    width: 80%;\n    margin: 0 auto;\n    padding: 20px;\n  }\n`\n\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <GlobalStyle/>\n          <main>\n            <Route exact={true} path={\"/\"} component={Home} />\n            <Route path={\"/details/:movieId\"} component={Detail} />\n          </main>\n        </Router>\n\n      </ApolloProvider>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}